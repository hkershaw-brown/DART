Namelist options for MPAS/DART
===============================

This README describes namelist options in input.nml for MPAS/DART cycling runs.
If you are not yet familiar with MPAS meshes, see ../README.grid_structure first
so that you can understand the description of namelist options here.

Cycling of MPAS/DART is run in a *restart* mode. 
For that, the MPAS namelist ``namelist.atmosphere`` should be edited for 
``config_do_DAcycling = .true.`` in ``&restart`` section.
If you use ``advance_model.csh`` script provided in the ``shell_scripts`` directory,
it will automatically set it up for your cycling runs.

As for all DART experiments, the overall design for an experiment is this: 
the DART program ``filter`` will read the initial condition or restart file, 
the observation sequence file, and the DART namelist to decide whether or not 
to advance the MPAS model. All of the control of the execution of the MPAS model 
is done by DART directly. If the model needs to be advanced, ``filter`` makes a 
call to the shell to execute the script ``advance_model.csh``, which is ENTIRELY 
responsible for getting all the input files, data files, namelists, etc. into a 
temporary directory for each ensemble member, running the model, copying the 
results back to the parent directory (which we call CENTRALDIR). 
The whole process hinges on setting the MPAS model namelist values such that 
it is doing a restart for every model advance. For your model configuration, you
need to edit your namelist.atmosphere in advance.
After the ensemble analysis updates mpas_state_variables defined in &mpas_var_nml
in input.nml (See below for a sample variable list), with ``config_do_DAcycling = .true.``,
the MPAS model will recouple the state variables (updated by filter) with dry air density (e.g., rho) 
before the model integration begins. This is critical because the the model only predicts 
the flux (e.g., coupled) variables, meaning that the analysis updated by filter will not
be passed onto the model without the recoupling process.

Since DART is an ensemble algorithm, there are multiple analysis files for a
single analysis time: one for each ensemble member. Because MPAS/DART is run in
a restart mode, each member should keep its own MPAS restart file from the
previous cycle (rather than having a single template file in CENTRALDIR).
Creating the initial ensemble of states is an area of active research.


Namelist
--------

For your DA configuration, you need to edit &model_nml and &mpas_vars_nml in input.nml.

Namelists start with an ampersand '&' and terminate with a slash '/'. 
Character strings that contain a '/' must be enclosed in quotes to prevent
them from prematurely terminating the namelist.

.. code-block:: fortran

   &model_nml
      init_template_filename       = 'mpas_init.nc',
      vert_localization_coord      = 3,
      assimilation_period_days     = 0,
      assimilation_period_seconds  = 21600,
      model_perturbation_amplitude = 0.0001,
      log_p_vert_interp            = .true.,
      calendar                     = 'Gregorian',
      use_u_for_wind               = .false.,
      use_rbf_option               = 2,
      update_u_from_reconstruct    = .true.,
      use_increments_for_u_update  = .true.,
      highest_obs_pressure_mb      = 100.0,
      sfc_elev_max_diff            = -1.0,
      outside_grid_level_tolerance = -1.0,
      extrapolate                  = .false.,
      debug                        = 0,
   /

+---------------------------------------+---------------------------------------+-----------------------------------------+
| Item                                  | Type                                  | Description                             |
+=======================================+=======================================+=========================================+
| init_template_filename                | character(len=256)                    | The name of the MPAS analysis file to   |
|                                       | *[default: 'mpas_init.nc']*           | be read and/or written by the DART      |
|                                       |                                       | programs for the mesh info.             |
|                                       |                                       | No time-variant fields are read.        |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| highest_obs_pressure_mb               | real(r8)                              | Observations higher than this           |
|                                       | *[default: 100.0]*                    | pressure are ignored. Set to -1.0 to    |
|                                       |                                       | ignore this test. For models with a     |
|                                       |                                       | prescribed top boundary layer, trying   |
|                                       |                                       | to assimilate very high observations    |
|                                       |                                       | results in problems because the model   |
|                                       |                                       | damps out any changes the               |
|                                       |                                       | assimilation tries to make. With        |
|                                       |                                       | adaptive algorithms this results in     |
|                                       |                                       | larger and larger coefficients as the   |
|                                       |                                       | assimilation tries to effect state      |
|                                       |                                       | vector change.                          |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| assimilation_period_days              | integer *[default: 0]*                | The number of days to advance the       |
|                                       |                                       | model for each assimilation. Even if    |
|                                       |                                       | the model is being advanced outside     |
|                                       |                                       | of the DART filter program, the         |
|                                       |                                       | assimilation period should be set       |
|                                       |                                       | correctly. Only observations with a     |
|                                       |                                       | time within +/- 1/2 this window size    |
|                                       |                                       | will be assimilated.                    |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| assimilation_period_seconds           | integer *[default: 21600]*            | In addition to                          |
|                                       |                                       | ``assimilation_period_days``, the       |
|                                       |                                       | number of seconds to advance the        |
|                                       |                                       | model for each assimilation.            |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| vert_localization_coord               | integer *[default: 3]*                | Vertical coordinate for vertical        |
|                                       |                                       | localization.                           |
|                                       |                                       |                                         |
|                                       |                                       | -  1 = model level                      |
|                                       |                                       | -  2 = pressure (in pascals)            |
|                                       |                                       | -  3 = height (in meters)               |
|                                       |                                       | -  4 = scale height (unitless)          |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| sfc_elev_max_diff                     | real(r8)\ *[default: -1.0]*           | If > 0, the maximum difference, in      |
|                                       |                                       | meters, between an observation marked   |
|                                       |                                       | as a 'surface obs' as the vertical      |
|                                       |                                       | type (with the surface elevation, in    |
|                                       |                                       | meters, as the numerical vertical       |
|                                       |                                       | location), and the surface elevation    |
|                                       |                                       | as defined by the model. Observations   |
|                                       |                                       | further away from the surface than      |
|                                       |                                       | this threshold are rejected and not     |
|                                       |                                       | assimilated. If the value is            |
|                                       |                                       | negative, this test is skipped.         |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| log_p_vert_interp                     | logical *[default: .true.]*           | If ``.true.``, vertical interpolation   |
|                                       |                                       | is done in log-pressure. Otherwise,     |
|                                       |                                       | linear.                                 |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| use_u_for_wind                        | logical *[default: .false.]*          | If ``.false.``, zonal and meridional    |
|                                       |                                       | winds at cell centers are used for      |
|                                       |                                       | the wind observation operator           |
|                                       |                                       | [default]. In that case, triangular     |
|                                       |                                       | meshes are used for the barycentric     |
|                                       |                                       | (e.g., area-weighted) interpolation.    |
|                                       |                                       | If ``.true.``, wind vectors at an       |
|                                       |                                       | arbitrary (e.g., observation) point     |
|                                       |                                       | are reconstructed from the normal       |
|                                       |                                       | component of velocity on cell edges     |
|                                       |                                       | *(u)* using radial basis functions      |
|                                       |                                       | (RBFs) provided by the MPAS model.      |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| use_rbf_option                        | integer *[default: 2]*                | If ``use_u_for_wind = .true.``, this    |
|                                       |                                       | option controls how many points will    |
|                                       |                                       | be used in the RBF interpolation.       |
|                                       |                                       | Options are available as 0, 1, 2, and   |
|                                       |                                       | 3. All the edges available in N (=      |
|                                       |                                       | 0,1,2, or 3) neighboring cells go       |
|                                       |                                       | into the RBF reconstruction.            |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| update_u_from_reconstruct             | logical *[default: .true.]*           | When zonal and meridional winds at      |
|                                       |                                       | cell centers are used for the wind      |
|                                       |                                       | observation operator                    |
|                                       |                                       | (``use_u_for_wind = .false.``), this    |
|                                       |                                       | option decides if the normal            |
|                                       |                                       | component of velocity on cell edges     |
|                                       |                                       | (which is the only wind prognostic      |
|                                       |                                       | variable in MPAS) should be         |
|                                       |                                       | updated from the winds at cell          |
|                                       |                                       | centers. If ``.true.``,                 |
|                                       |                                       | ``use_increments_for_u_update``         |
|                                       |                                       | should be also decided.                 |
|                                       |                                       | If ``use_u_for_wind = .true.``          |
|                                       |                                       | and the normal component of             |
|                                       |                                       | velocity on cell edges is defined as    |
|                                       |                                       | a state vector, this option should be   |
|                                       |                                       | ``.false.`` so the edge winds can be    |
|                                       |                                       | directly updated by filter.             |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| use_increments_for_u_update           | logical *[default: .true.]*           | Only if ``update_u_from_reconstruct     |
|                                       |                                       | = .true.``, this option is used to      |
|                                       |                                       | decide if the edge winds are replaced   |
|                                       |                                       | by averaging from the analysis winds    |
|                                       |                                       | at cell centers (``.false.``), or       |
|                                       |                                       | just updated by the analysis            |
|                                       |                                       | increments at cell centers              |
|                                       |                                       | (``.true.``). If ``.true.``, all        |
|                                       |                                       | the wind components (e.g., both at      |
|                                       |                                       | cell centers and edges) are read from   |
|                                       |                                       | prior and used to compute the           |
|                                       |                                       | increments [Recommended].               |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| model_perturbation_amplitude          | real(r8) *[default: 0.0001]*          | The amplitude of random noise to add    |
|                                       |                                       | when trying to perturb a single state   |
|                                       |                                       | vector to create an ensemble. Only      |
|                                       |                                       | used when ``start_from_restart =        |
|                                       |                                       | .false.`` in the ``&filter_nml``        |
|                                       |                                       | namelist within ``input.nml``           |
|                                       |                                       | Multiplied by the state vector, it      |
|                                       |                                       | produces standard deviation of a        |
|                                       |                                       | gaussian distribution with the mean     |
|                                       |                                       | at the value of the state vector        |
|                                       |                                       | element.                                |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| calendar                              | character(len=32)                     | Character string specifying the         |
|                                       | *[default: 'Gregorian']*              | calendar being used by MPAS.            |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| outside_grid_level_tolerance          | real(r8) *[default: -1.0]*            | If greater than 0.0, amount of          |
|                                       |                                       | distance in fractional model levels     |
|                                       |                                       | that a vertical location can be above   |
|                                       |                                       | or below the top or bottom of the       |
|                                       |                                       | grid and still be evaluated without     |
|                                       |                                       | error. Since *extrapolate* is not       |
|                                       |                                       | implemented yet, the value of           |
|                                       |                                       | ``.false.`` will be assumed. In this    |
|                                       |                                       | case, vertical locations equivalent     |
|                                       |                                       | to level 1 or level N will be used.     |
|                                       |                                       | Eventually, if *extrapolate* is         |
|                                       |                                       | ``.true.``, extrapolate from the        |
|                                       |                                       | first or last model level. If           |
|                                       |                                       | *extrapolate* is ``.false.``, simply    |
|                                       |                                       | use the value at level 1 for low        |
|                                       |                                       | vertical locations, or at level N for   |
|                                       |                                       | high vertical locations.                |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| extrapolate                           | logical *[default: .false.]*          | *NOT IMPLEMENTED YET*. Vertical         |
|                                       |                                       | locations equivalant to level 1 or      |
|                                       |                                       | level N will be used. When this is      |
|                                       |                                       | implemented, it will do:                |
|                                       |                                       | If *outside_grid_level_tolerance* is    |
|                                       |                                       | greater than 0.0, then control how      |
|                                       |                                       | values are assigned to locations        |
|                                       |                                       | where the vertical is exterior to the   |
|                                       |                                       | grid. If this is ``.true.``, then       |
|                                       |                                       | extrapolate low locations from levels   |
|                                       |                                       | 1 and 2, and high locations from        |
|                                       |                                       | levels N-1 and N. If this is            |
|                                       |                                       | ``.false.``, then simply use the        |
|                                       |                                       | corresponding values at level 1 or N.   |
|                                       |                                       | This item is ignored if                 |
|                                       |                                       | ``outside_grid_level_tolerance`` is     |
|                                       |                                       | less than or equal to 0.0.              |
+---------------------------------------+---------------------------------------+-----------------------------------------+
| debug                                 | integer *[default: 0]*                | The switch to specify the run-time      |
|                                       |                                       | verbosity.                              |
|                                       |                                       |                                         |
|                                       |                                       | - ``0`` is as quiet as it gets          |
|                                       |                                       | - ``>1`` prints more run-time messages  |
|                                       |                                       | - ``>5`` prints ALL run-time messages   |
|                                       |                                       |                                         |
+---------------------------------------+---------------------------------------+-----------------------------------------+

.. code-block:: fortran

   &mpas_vars_nml
      mpas_state_variables = 'theta',                 'QTY_POTENTIAL_TEMPERATURE',
                             'rho',                   'QTY_DENSITY',
                             'uReconstructZonal',     'QTY_U_WIND_COMPONENT',
                             'uReconstructMeridional','QTY_V_WIND_COMPONENT',
                             'qv',                    'QTY_VAPOR_MIXING_RATIO',
                             'qc',                    'QTY_CLOUDWATER_MIXING_RATIO',
                             'surface_pressure',      'QTY_SURFACE_PRESSURE'
      mpas_state_bounds    = 'qv','0.0','NULL','CLAMP',
                             'qc','0.0','NULL','CLAMP',
   /

+--------------------+---------------------------------------+---------------------------------------------+
| Item               | Type                                  | Description                                 |
+====================+=======================================+=============================================+
| mpas_vars_nml      | character(len=NF90_MAX_NAME)::        | The table that both specifies which         |
|                    | dimension(160)                        | MPAS variables will be placed in the    |
|                    |                                       | state vector, and also relates those        |
|                    |                                       | variables to the corresponding DART kinds.  |
|                    |                                       | The first column in each pair must be the   |
|                    |                                       | exact NetCDF name of a field in the MPAS    |
|                    |                                       | file. The second column in each pair must   |
|                    |                                       | be a KIND known to the DART system. See     |
|                    |                                       | the ``obs_kind_mod.f90`` file within        |
|                    |                                       | ``assimilation_code/modules/observations/`` |
|                    |                                       | for known names. This file is autogenerated |
|                    |                                       | when DART builds filter for a particular    |
|                    |                                       | model, so run ``quickbuild.sh`` in the      |
|                    |                                       | work directory first before examining this  |
|                    |                                       | file. Use the generic kind list in the      |
|                    |                                       | ``obs_kind_mod`` tables, not the specific   |
|                    |                                       | type list.                                  |
+--------------------+---------------------------------------+---------------------------------------------+
| mpas_state_bounds  | character(len=NF90_MAX_NAME)::        | List only MPAS variables that must      |
|                    | dimension(160)                        | restrict their values to remain between     |
|                    |                                       | given lower and/or upper bounds.            |
|                    |                                       | Columns are: NetCDF variable name, min      |
|                    |                                       | value, max value, and action to take for    |
|                    |                                       | out-of-range values. Either min or max can  |
|                    |                                       | have the string 'NULL' to indicate no       |
|                    |                                       | limiting will be done. If the action is     |
|                    |                                       | 'CLAMP' out of range values will be changed |
|                    |                                       | to the corresponding bound and execution    |
|                    |                                       | continues; 'FAIL' stops the executable if   |
|                    |                                       | out of range values are detected.           |
+--------------------+---------------------------------------+---------------------------------------------+

The ``&mpas_vars_nml`` namelist within ``input.nml`` contains the list of MPAS
variables that make up the DART state vector. The order the items are specified
controls the order of the data in the state vector, so it should not be changed
without regenerating all DART initial condition or restart files. These
variables are directly updated by the filter assimilation.

Any variables whose values cannot exceed a given minimum or maximum can be
listed in ``mpas_state_bounds``. When the data is written back into the MPAS
NetCDF files values outside the allowed range will be detected and changed. Data
inside the DART state vector and data written to the DART diagnostic files will
not go through this test and values may exceed the allowed limits. Note that
changing values at the edges of the distribution means it is no longer
completely gaussian. In practice this technique has worked effectively, but if
the assimilation is continually trying to move the values outside the permitted
range the results may be of poor quality. Examine the diagnostics for these
fields carefully when using bounds to restrict their values.

